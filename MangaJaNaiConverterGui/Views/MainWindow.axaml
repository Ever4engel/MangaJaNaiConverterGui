<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:MangaJaNaiConverterGui.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" 
        xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:hypertext="clr-namespace:HyperText.Avalonia.Controls;assembly=HyperText.Avalonia"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
        x:Class="MangaJaNaiConverterGui.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/logo.ico"
        Title="MangaJaNaiConverterGui">

  <Window.Styles>
    <Style Selector="TabControl[TabStripPlacement=Top]">
      <!-- Override styled behaviour -->
      <Setter Property="Padding" Value="0"/>
    </Style>
    <Style Selector="TextBlock">
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style Selector="TextBox">
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style Selector="Border.border">
      
      <Setter Property="Margin" Value="0,10,0,0" />
      <Setter Property="CornerRadius" Value="5" />
      <Setter Property="BorderBrush" Value="#33888888" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Padding" Value="10" />
    </Style>
    <Style Selector="Button.active">
      <Setter Property="Background" Value="{DynamicResource SystemAccentColor }" />
      <Style Selector="^:pointerover">
        <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
          <Setter Property="Background" Value="{DynamicResource SystemAccentColor}" />
          <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}" />
        </Style>
      </Style>
    </Style>
  </Window.Styles>
  
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

  <Grid>
    <!-- Main Content -->
    <Grid ColumnDefinitions="300,*" RowDefinitions="*" IsVisible="{Binding !IsExtractingBackend}">
      <DockPanel Grid.Column="0" Background="#33000000">

        <StackPanel DockPanel.Dock="Bottom">
          <TextBlock Margin="0">

          </TextBlock>
          <Button FontSize="13" Padding="10" Classes.active="{Binding ShowAppSettings}" Width="300" HorizontalContentAlignment="Left" Command="{Binding HandleAppSettingsSelected}">
            <StackPanel Orientation="Horizontal">
              <materialIcons:MaterialIcon Kind="Gear" VerticalAlignment="Center" />
              <TextBlock Margin="5,0,5,0" VerticalAlignment="Center">App Settings</TextBlock>
            </StackPanel>
          </Button>
        </StackPanel>

        <StackPanel>
          <TextBlock Margin="10">
            Default Workflows
          </TextBlock>

          <Button FontSize="13" Padding="10" Width="300" HorizontalContentAlignment="Left" Command="{Binding HandleWorkflowSelected}" CommandParameter="0"
                  Classes.active="{Binding Workflows[0].ActiveWorkflow}">
            <StackPanel Orientation="Horizontal">
              <materialIcons:MaterialIcon Kind="Book" VerticalAlignment="Center" />
              <TextBlock Margin="5,0,5,0" VerticalAlignment="Center" Text="{Binding Workflows[0].WorkflowName}" />
            </StackPanel>
          </Button>

          <StackPanel Orientation="Horizontal" Margin="10" ToolTip.Tip="Custom workflows provide convenient access to save and load preset settings for upscaling." ToolTip.ShowDelay="200">
            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">
              Custom Workflows
            </TextBlock>
            <materialIcons:MaterialIcon Kind="QuestionMarkCircle" VerticalAlignment="Center" Opacity="0.5" />
          </StackPanel>

          <ItemsControl ItemsSource="{Binding CustomWorkflows}">
            <ItemsControl.ItemTemplate>
              <DataTemplate x:DataType="vm:UpscaleWorkflow">
                <StackPanel>
                  <Button FontSize="13" Padding="10" Width="300" HorizontalContentAlignment="Left"
                          ClickMode="Press"
                          Classes.active="{Binding ActiveWorkflow}"
                          Command="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).HandleWorkflowSelected}"
                          CommandParameter="{Binding WorkflowIndex}">
                    <StackPanel Orientation="Horizontal">
                      <materialIcons:MaterialIcon Kind="{Binding WorkflowIcon}" VerticalAlignment="Center" />
                      <TextBlock Margin="5,0,5,0" VerticalAlignment="Center" Text="{Binding WorkflowName}" />
                    </StackPanel>
                  </Button>
                </StackPanel>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </StackPanel>
        
      </DockPanel>

      <DockPanel IsVisible="{Binding ShowMainForm}" Grid.Column="1">

        <StackPanel DockPanel.Dock="Bottom">          
          <StackPanel Orientation="Horizontal">
            <Button Margin="20,10,0,10" FontWeight="Bold" Background="Green" IsEnabled="{Binding UpscaleEnabled}" Command="{Binding RunUpscale}">
              <StackPanel Orientation="Horizontal">
                <materialIcons:MaterialIcon Kind="PlayCircle" />
                <TextBlock Margin="5,0,0,0">Upscale</TextBlock>
              </StackPanel>

            </Button>
            <Button Margin="20,10,0,10" FontWeight="Bold" Background="Red" IsEnabled="{Binding Upscaling}" Command="{Binding CancelUpscale}">
              <StackPanel Orientation="Horizontal">
                <materialIcons:MaterialIcon Kind="StopCircle" />
                <TextBlock Margin="5,0,0,0">Cancel</TextBlock>
              </StackPanel>
            </Button>
          </StackPanel>

          <StackPanel IsVisible="{Binding ShowConsole}" >
            <DockPanel>
              <TextBlock DockPanel.Dock="Left" Margin="20,10,0,0" FontWeight="Bold" Text="Console"></TextBlock>
              <ToggleButton DockPanel.Dock="Right" Margin="0,0,20,0" IsChecked="{Binding !ShowConsole}">
                <materialIcons:MaterialIcon Kind="Close" />
              </ToggleButton>
              <Rectangle/>
            </DockPanel>

            <ScrollViewer Margin="0,10,0,0" Background="#111111" Height="450" HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" Foreground="Gray"  PropertyChanged="ConsoleScrollViewer_PropertyChanged">
              <SelectableTextBlock Margin="20" Text="{Binding ConsoleText}" FontFamily="Consolas" PropertyChanged="ConsoleTextBlock_PropertyChanged" />
            </ScrollViewer>
          </StackPanel>

          <DockPanel Margin="0" Height="30" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">

            <TextBlock Margin="10,10,10,0" DockPanel.Dock="Left" FontSize="10" Text="{Binding LeftStatus}" />
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">

              <StackPanel Orientation="Horizontal" IsVisible="{Binding ShowEstimates}">
                <TextBlock TextAlignment="Center" Width="140" FontSize="10" Margin="10,10,20,0" Text="{Binding ElapsedTime, StringFormat={}Elapsed Time: {0}}" />
                <StackPanel Orientation="Horizontal" IsVisible="{Binding ShowArchiveProgressBar}">
                  <TextBlock TextAlignment="Center" Width="220" FontSize="10" Margin="10,10,20,0" Text="{Binding ArchiveEtr, StringFormat=Remaining Time (Current Archive): {0:hh\\:mm\\:ss}}" />
                </StackPanel>
                <TextBlock TextAlignment="Center" Width="180" FontSize="10" Margin="10,10,20,0" Text="{Binding TotalEtr, StringFormat=Remaining Time (Total): {0:hh\\:mm\\:ss}}" />
                <TextBlock TextAlignment="Center" Width="180" FontSize="10" Margin="10,10,20,0" Text="{Binding TotalEta, StringFormat={}Estimated Finish Time: {0}}" />
              </StackPanel>

              <!-- progress within current archive -->
              <ProgressBar  Margin="5,0,0,0" Height="20"
                            Minimum="0"
                            Maximum="{Binding ProgressTotalFilesInCurrentArchive}"
                            Value="{Binding ProgressCurrentFileInArchive}"
                            ProgressTextFormat="{}{0:0} / {3:0} images in current archive"
                            FontSize="10"
                            ShowProgressText="True"
                            IsVisible="{Binding ShowArchiveProgressBar}" />

              <!-- total progress across all files -->
              <ProgressBar  Margin="5,0,5,0" Height="20"
                            Minimum="0"
                            Maximum="{Binding ProgressTotalFiles}"
                            Value="{Binding ProgressCurrentFile}"
                            ProgressTextFormat="{}{0:0} / {3:0} total files"
                            FontSize="10"
                            ShowProgressText="True"/>

              <ToggleButton IsChecked="{Binding ShowConsole}" FontSize="10" Margin="5,0,5,0">
                <StackPanel Orientation="Horizontal">
                  <materialIcons:MaterialIcon Kind="Console" VerticalAlignment="Center" />
                  <TextBlock Margin="5,0,5,0" VerticalAlignment="Center">Console</TextBlock>
                </StackPanel>
              </ToggleButton>
            </StackPanel>

            <Rectangle />
          </DockPanel>
        </StackPanel>

        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible">
          <!-- Main Form -->
          <StackPanel Margin="20">
            <Grid>
              <StackPanel Orientation="Horizontal" Margin="0,10,0,10" IsVisible="{Binding !CurrentWorkflow.IsDefaultWorkflow}" Grid.Column="0">
                <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Workflow Name</TextBlock>
                <TextBox Width="500" Margin="0,0,5,0" Text="{Binding CurrentWorkflow.WorkflowName}"/>
              </StackPanel>

              <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" IsVisible="{Binding !CurrentWorkflow.IsDefaultWorkflow}">
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Right">

                  <Button Margin="10,0,10,0" Click="ImportCurrentWorkflowButtonClick">
                    <StackPanel Orientation="Horizontal">
                      <materialIcons:MaterialIcon Kind="Import" VerticalAlignment="Center" />
                      <TextBlock Margin="10,0,10,0" VerticalAlignment="Center">Import Workflow</TextBlock>
                    </StackPanel>
                  </Button>
                  <Button Margin="10,0,10,0" Click="ExportCurrentWorkflowButtonClick">
                    <StackPanel Orientation="Horizontal">
                      <materialIcons:MaterialIcon Kind="Export" VerticalAlignment="Center" />
                      <TextBlock Margin="10,0,10,0" VerticalAlignment="Center">Export Workflow</TextBlock>
                    </StackPanel>
                  </Button>
                  <Button Margin="10,0,0,0" Click="ResetWorkflow">
                    <StackPanel Orientation="Horizontal">
                      <materialIcons:MaterialIcon Kind="Refresh" VerticalAlignment="Center" />
                      <TextBlock Margin="10,0,10,0" VerticalAlignment="Center">Reset Workflow</TextBlock>
                    </StackPanel>
                  </Button>
                </StackPanel>
              </StackPanel>
              
            </Grid>
            <DockPanel>
              <TextBlock DockPanel.Dock="Left" FontWeight="Bold" Text="Input and Output"></TextBlock>
              <CheckBox DockPanel.Dock="Right" IsChecked="{Binding CurrentWorkflow.ShowAdvancedSettings}" Content="Show Advanced Settings" />
              <Rectangle />
            </DockPanel>

            <!--Input and Output -->
            <Border Classes="border"
                    IsEnabled="{Binding !Upscaling}">
              <StackPanel>
                <TabControl SelectedIndex="{Binding CurrentWorkflow.SelectedTabIndex}" Margin="0">
                  <TabItem VerticalContentAlignment="Center" FontSize="16" Margin="0">
                    <TabItem.Header>
                      <StackPanel Orientation="Horizontal">
                        <materialIcons:MaterialIcon Kind="File" />
                        <TextBlock Margin="5,0,5,0">Single File Upscale</TextBlock>
                      </StackPanel>
                    </TabItem.Header>
                    <Border Classes="border">
                      <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                          <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Input File</TextBlock>
                          <TextBox x:Name="InputFileNameTextBox" Margin="0,0,5,0" Text="{Binding CurrentWorkflow.InputFilePath}" IsReadOnly="False" Width="600" DragDrop.AllowDrop="True"/>
                          <Button Content="Select File" Click="OpenInputFileButtonClick" />
                          <TextBlock Foreground="Gray" Width="500" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Path of the image or archive file (such as zip or cbz) to upscale. If an archive file is selected, each image in the archive will be upscaled and saved to a new archive.</TextBlock>
                        </StackPanel>

                      </StackPanel>
                    </Border>

                  </TabItem>
                  <TabItem VerticalAlignment="Center" FontSize="16">
                    <TabItem.Header>
                      <StackPanel Orientation="Horizontal">
                        <materialIcons:MaterialIcon Kind="Folder" />
                        <TextBlock Margin="5,0,5,0">Batch Folder Upscale</TextBlock>
                      </StackPanel>
                    </TabItem.Header>
                    <StackPanel>

                      <Border Classes="border">
                        <StackPanel>
                          <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Input Folder</TextBlock>
                            <TextBox x:Name="InputFolderNameTextBox" Margin="0,0,5,0" Text="{Binding CurrentWorkflow.InputFolderPath}" IsReadOnly="False" Width="600" DragDrop.AllowDrop="True" />
                            <Button Content="Select Folder" Click="OpenInputFolderButtonClick" />
                            <TextBlock Foreground="Gray" Width="500" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                              Path of the folder to upscale. The folder and all of its subfolders will be scanned and images and/or archives will be upscaled depending on the selection below.
                            </TextBlock>
                          </StackPanel>

                          <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                            <CheckBox Margin="0,0,5,0" IsChecked="{Binding CurrentWorkflow.UpscaleArchives}">Upscale Archives</CheckBox>
                            <CheckBox IsChecked="{Binding CurrentWorkflow.UpscaleImages}">Upscale Images</CheckBox>
                            <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                              Whether to upscale Image files (*.png, *.jpg, *.jpeg, *.webp, *.bmp) and/or Archive files (*.zip, *.cbz, *.rar, *.cbr) in the selected Input Folder.
                            </TextBlock>
                          </StackPanel>
                        </StackPanel>
                      </Border>

                    </StackPanel>
                  </TabItem>
                </TabControl>

                <Border Classes="border">
                  <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                      <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Output Folder</TextBlock>
                      <TextBox x:Name="OutputFolderNameTextBox" Classes="clearButton" Margin="0,0,5,0" Text="{Binding CurrentWorkflow.OutputFolderPath}" IsReadOnly="False" Width="600" DragDrop.AllowDrop="True" />
                      <Button Content="Select Folder" Click="OpenOutputFolderButtonClick" />
                      <TextBlock Foreground="Gray" Width="500" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                        Path of the folder to save the upscaled image(s) or archive(s).
                      </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                      <TextBlock Margin="0,0,5,0">Output Filename</TextBlock>
                      <TextBox Text="{Binding CurrentWorkflow.OutputFilename}" Margin="0,0,5,0" IsReadOnly="False" Width="600" DragDrop.AllowDrop="True" />
                      <SelectableTextBlock Foreground="Gray" Width="500" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                        The filename of the upscaled image(s) or archive(s), without the file extension. <Run FontFamily="Consolas">%filename%</Run> is the input filename without extension. Archives will be output with .cbz extension; images will be output with the extension of the image format selected below.
                      </SelectableTextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                      <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="{Binding CurrentWorkflow.OverwriteExistingFiles}">Allow Files in Output Path to be Overwritten</CheckBox>
                      <TextBlock Width="600" TextWrapping="WrapWithOverflow" Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">If unchecked, upscaling will be skipped for files that already exist in the output path. If checked, any files that already exist in the output path will be overwritten without warning. Use with caution.</TextBlock>
                    </StackPanel>
                  </StackPanel>
                </Border>


                <Border Classes="border">
                  <StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,10,0,10">
                      <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Output Image Format</TextBlock>
                      <ToggleButton IsChecked="{Binding CurrentWorkflow.WebpSelected}" Content="WebP" Command="{Binding CurrentWorkflow.SetWebpSelected}" />
                      <ToggleButton IsChecked="{Binding CurrentWorkflow.AvifSelected}" Content="AVIF" Command="{Binding CurrentWorkflow.SetAvifSelected}" />
                      <ToggleButton IsChecked="{Binding CurrentWorkflow.PngSelected}" Content="PNG" Command="{Binding CurrentWorkflow.SetPngSelected}" />
                      <ToggleButton IsChecked="{Binding CurrentWorkflow.JpegSelected}" Content="JPEG" Command="{Binding CurrentWorkflow.SetJpegSelected}" />
                      <TextBlock Foreground="Gray" Width="950" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="40,0,0,0" xml:space="preserve"><Bold>WebP</Bold>: Modern format recommended for good quality and efficient filesize compression, with good compatibility on modern devices. Supports lossless and lossy compression. 
<Bold>AVIF</Bold>: Modern format with better lossy compression efficiency than WebP, but not as widely supported and slower to save and load compared to WebP.
<Bold>PNG</Bold>: Lossless compressed format with excellent compatibility, but worse compression efficiency than WebP and AVIF. 
<Bold>JPEG</Bold>: Lossy compressed format with excellent compatibility, but worse compression efficiency than WebP and AVIF. 
            </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,0,0,10" IsVisible="{Binding CurrentWorkflow.ShowUseLosslessCompression}">
                      <CheckBox Margin="0,0,5,0" IsChecked="{Binding CurrentWorkflow.UseLosslessCompression}">Use Lossless Compression</CheckBox>
                      <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                        Use lossless compression. Usually not recommended due to producing images with much larger filesize with little visual benefit.
                      </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,0,0,10" IsVisible="{Binding CurrentWorkflow.ShowLossyCompressionQuality}">
                      <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Lossy Compression Quality</TextBlock>
                      <NumericUpDown Margin="0,0,5,0" Value="{Binding CurrentWorkflow.LossyCompressionQuality}" Increment="1" Minimum="0" Maximum="100" Width="120"  />
                      <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">%</TextBlock>
                      <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                        Quality level for compression. Note that a quality level of 100 is still lossy.
                      </TextBlock>
                    </StackPanel>
                  </StackPanel>
                </Border>

              </StackPanel>
            </Border>

            <TextBlock Margin="0,40,0,0" FontWeight="Bold" Text="Upscaling"></TextBlock>
            <Border Classes="border" IsEnabled="{Binding !Upscaling}">

              <StackPanel>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,10,0,10">
                  <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Upscale Mode</TextBlock>
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.ModeScaleSelected}" Content="Scale" Command="{Binding CurrentWorkflow.SetModeScaleSelected}" />
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.ModeWidthSelected}" Content="Width" Command="{Binding CurrentWorkflow.SetModeWidthSelected}" />
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.ModeHeightSelected}" Content="Height" Command="{Binding CurrentWorkflow.SetModeHeightSelected}" />
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.ModeFitToDisplaySelected}" Content="Fit to Display" Command="{Binding CurrentWorkflow.SetModeFitToDisplaySelected}" />
                  <TextBlock Foreground="Gray" Width="900" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="40,0,0,0" xml:space="preserve"><Bold>Scale</Bold>: All images will be upscaled by the specified scaling factor. For example, a factor of 2x will double the width and height of each image.
<Bold>Width</Bold>: All images will be upscaled to the specified width, while maintaining aspect ratio of the image. 
<Bold>Height</Bold>: All images will be upscaled to the specified height, while maintaining aspect ratio of the image. 
<Bold>Fit to Display</Bold>: All images will be upscaled to fit exactly within the specified display device. 
            </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,10" IsVisible="{Binding CurrentWorkflow.ModeScaleSelected}">
                  <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Scale Factor</TextBlock>
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.Is1x}" Content="1x" Command="{Binding CurrentWorkflow.SetUpscaleScaleFactor}" CommandParameter="1" />
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.Is2x}" Content="2x" Command="{Binding CurrentWorkflow.SetUpscaleScaleFactor}" CommandParameter="2" />
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.Is3x}" Content="3x" Command="{Binding CurrentWorkflow.SetUpscaleScaleFactor}" CommandParameter="3" />
                  <ToggleButton IsChecked="{Binding CurrentWorkflow.Is4x}" Content="4x" Command="{Binding CurrentWorkflow.SetUpscaleScaleFactor}" CommandParameter="4" />
                  <TextBlock Foreground="Gray" Width="900" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="40,0,0,0">
                    All images will be upscaled by the specified scaling factor. For example, a factor of 2x will double the width and height of each image.
                  </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,0,0,10" IsVisible="{Binding CurrentWorkflow.ModeHeightSelected}">
                  <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Output Height</TextBlock>
                  <NumericUpDown Margin="0,0,5,0" Value="{Binding CurrentWorkflow.ResizeHeightAfterUpscale}" AllowSpin="False" ShowButtonSpinner="False" Minimum="1" />
                  <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
                  <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0" Width="900" TextWrapping="WrapWithOverflow">
                    All images will be upscaled to this height. For reading on tablets, this can be used to set the image height to the resolution of your tablet's display.
                  </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,10" IsVisible="{Binding CurrentWorkflow.ModeWidthSelected}">
                  <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Output Width</TextBlock>
                  <NumericUpDown Margin="0,0,5,0" Value="{Binding CurrentWorkflow.ResizeWidthAfterUpscale}" AllowSpin="False" ShowButtonSpinner="False" Minimum="1" />
                  <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
                  <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0" Width="900" TextWrapping="WrapWithOverflow">
                    All images will be upscaled to this width. For reading on tablets, this can be used to set the image width to the resolution of your tablet's display.
                  </TextBlock>
                </StackPanel>

                <!--Fit to Device Mode-->
                <StackPanel IsVisible="{Binding CurrentWorkflow.ModeFitToDisplaySelected}">
                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Tablet Device or Display</TextBlock>
                    <AutoCompleteBox Classes="clearButton" Margin="0,0,5,0" AsyncPopulator="{Binding PopulateDevicesAsync}" FilterMode="None" Width="400" Text="{Binding CurrentWorkflow.DisplayDevice}" Tapped="HandleDevicesTapped" GotFocus="HandleDevicesGotFocus" MinimumPrefixLength="0"  />
                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0" Width="900" TextWrapping="WrapWithOverflow">
                      The name of the tablet or display device. Start typing to show more options.
                    </TextBlock>
                  </StackPanel>
                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Display Orientation</TextBlock>
                    <ToggleButton IsChecked="{Binding CurrentWorkflow.DisplayPortraitSelected}" Content="Portrait"  />
                    <ToggleButton IsChecked="{Binding !CurrentWorkflow.DisplayPortraitSelected}" Content="Landscape" />
                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0" Width="900" TextWrapping="WrapWithOverflow">
                      Whether the display will be used in portrait/vertical mode or landscape/horizontal mode.
                    </TextBlock>
                  </StackPanel>
                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Display Resolution</TextBlock>
                    <TextBlock Margin="5,5,5,0" FontFamily="Consolas"  VerticalAlignment="Center">
                      <Run Text="{Binding CurrentWorkflow.DisplayDeviceWidth}"/>
                      <Run Text="px" />
                      <Run Text="×" />
                      <Run Text="{Binding CurrentWorkflow.DisplayDeviceHeight}" />
                      <Run Text="px" />
                    </TextBlock>
                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0" Width="900" TextWrapping="WrapWithOverflow">
                      Actual resolution of the selected display with the selected orientation, width × height.
                    </TextBlock>
                  </StackPanel>
                </StackPanel>
              </StackPanel>
            </Border>

            <StackPanel IsVisible="{Binding CurrentWorkflow.ShowAdvancedSettings}" IsEnabled="{Binding !Upscaling}">
              <StackPanel Margin="0,40,0,0" VerticalAlignment="Center" Orientation="Horizontal" ToolTip.Tip="Advanced settings allow you to select different settings to use depending on the image selected for upscaling.&#013;&#013;A chain is a set of conditions and the desired settings to apply when those conditions are met. When upscaling each image, if that image meets the activation conditions of a chain, then that chain's settings are applied to an image. If the image meets the activation conditions of multiple chains, only the settings of the highest matching chain in the list are applied. If the image doesn't meet the activation condition of any chain, then no processing or upscaling is applied to that image.&#013;&#013;The default settings use one upscaling model for color images, IllustrationJaNai, and several different MangaJaNai models for grayscale images. Each MangaJaNai model is optimized to work on images with a different height, ranging from 1200p to 2048p, so the chains are used to select the most suitable MangaJaNai model based on the resolution of the image.">
                <TextBlock Margin="0,0,5,0" FontWeight="Bold" Text="Advanced Settings"/>
                <materialIcons:MaterialIcon Kind="QuestionMarkCircle" Opacity="0.5" VerticalAlignment="Center" />
              </StackPanel>
              <TextBlock FontSize="12" Foreground="Gray" Margin="0,10,0,10" IsVisible="{Binding CurrentWorkflow.IsDefaultWorkflow}">
                Advanced settings are locked for the default workflow, and are displayed below for reference only. Select any custom workflow to modify the advanced settings for that workflow.
              </TextBlock>
              
              <Border Classes="border" IsEnabled="{Binding !CurrentWorkflow.IsDefaultWorkflow}">
                <StackPanel>
                  <ItemsControl ItemsSource="{Binding CurrentWorkflow.Chains}">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate x:DataType="vm:UpscaleChain">
                        <StackPanel>
                          <TextBlock Margin="10,10,0,10" Text="{Binding ChainNumber, StringFormat=Chain {0}}"  />
                          <Border Classes="border" Margin="0,0,0,20">
                            <Grid>
                              <StackPanel Grid.Column="0">
                              <TextBlock Margin="10,10,0,5" Text="Activation Condition" />
                              <Border Classes="border">
                                <StackPanel>
                                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10" VerticalAlignment="Center">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Resolution Range</TextBlock>
                                    <ui:FAComboBox IsEditable="True" Width="120"  MaxDropDownHeight="600" Text="{Binding MinResolution, Mode=TwoWay}"
                                                   VerticalAlignment="Center"
                                                   ItemsSource="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).CommonResolutions}" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>

                                    <TextBlock Margin="10,0,20,0" VerticalAlignment="Center"> - </TextBlock>
                                    <ui:FAComboBox IsEditable="True" Width="120"  MaxDropDownHeight="600" Text="{Binding MaxResolution, Mode=TwoWay}"
                                                   VerticalAlignment="Center"
                                                   ItemsSource="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).CommonResolutions}" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
                                    <TextBlock Foreground="Gray" Width="800" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Range of image resolutions to activate this chain. Select a common resolution from the drop down or type a custom resolution. Larger resolutions require more processing power to upscale. A dimension value of 0 means any value for that dimension, for example 0x1250 means any width, and 1250px tall. A maximum resolution of 0x0 means no resolution limit.</TextBlock>
                                  </StackPanel>

                                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Scaling Factor Range</TextBlock>
                                    <NumericUpDown Margin="0,0,5,0" Value="{Binding MinScaleFactor}" Minimum="0" Maximum="999" Width="80" AllowSpin="False" ShowButtonSpinner="False" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">x</TextBlock>

                                    <TextBlock Margin="10,0,20,0" VerticalAlignment="Center"> - </TextBlock>
                                    <NumericUpDown Margin="0,0,5,0" Value="{Binding MaxScaleFactor}" Minimum="0" Maximum="999" Width="80" AllowSpin="False" ShowButtonSpinner="False" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">x</TextBlock>
                                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Range of necessary scaling factor to activate this chain. A maximum scaling factor of 0 means no maximum limit.</TextBlock>
                                  </StackPanel>

                                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                                    <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="{Binding IsColor}">Is Color Image</CheckBox>
                                    <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="{Binding IsGrayscale}">Is Grayscale Image</CheckBox>
                                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Whether the image is color and/or grayscale. Images that appear grayscale but have faint color due to JPEG artifacts are still considered grayscale.</TextBlock>
                                  </StackPanel>

                                </StackPanel>
                              </Border>

                              <TextBlock Margin="10,20,0,5" Text="Upscale Settings" />
                              <Border Classes="border">
                                <StackPanel>

                                  <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                                    <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="{Binding AutoAdjustLevels}">Auto Adjust Levels on Grayscale Images</CheckBox>
                                    <TextBlock Width="800" TextWrapping="WrapWithOverflow" Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">If checked, automatically increase the contrast of all grayscale images if necessary. For best results with the MangaJaNai grayscale model, this setting is recommend when upscaling images which appear to be faded. This will have no effect on color images or grayscale images with sufficient contrast. </TextBlock>
                                  </StackPanel>
                                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Resize Height Before Upscale</TextBlock>
                                    <NumericUpDown Margin="0,0,5,0" VerticalAlignment="Center" Value="{Binding ResizeHeightBeforeUpscale}" Minimum="0" AllowSpin="False" ShowButtonSpinner="False" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
                                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                                      Resize each image to this height before upscaling, set to 0 to disable.
                                    </TextBlock>
                                  </StackPanel>
                                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Resize Width Before Upscale</TextBlock>
                                    <NumericUpDown Margin="0,0,5,0" Value="{Binding ResizeWidthBeforeUpscale}" Minimum="0" AllowSpin="False" ShowButtonSpinner="False" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
                                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                                      Resize each image to this width before upscaling, set to 0 to disable.
                                    </TextBlock>
                                  </StackPanel>
                                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Resize Factor Before Upscale</TextBlock>
                                    <NumericUpDown Margin="0,0,5,0" VerticalAlignment="Center" Value="{Binding ResizeFactorBeforeUpscale}" Minimum="0" AllowSpin="False" ShowButtonSpinner="False" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">%</TextBlock>
                                    <TextBlock Foreground="Gray" Width="800" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                                      Resize each image by this factor before upscaling. This setting is ignored if Resize Height Before Upscale is specified.
                                    </TextBlock>
                                  </StackPanel>

                                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Model</TextBlock>
                                    <ComboBox ItemsSource="{Binding AllModels}" SelectedValue="{Binding ModelFilePath}" Width="400" />
                                    <Button Margin="5,0,0,0" Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).OpenModelsDirectory}">
                                      <StackPanel Orientation="Horizontal">
                                        <materialIcons:MaterialIcon Kind="Launch" />
                                        <TextBlock Margin="5,0,0,0" Text="Open Models Directory" />
                                      </StackPanel>
                                    </Button>
                                    <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">The upscaling model to run. To choose from more models, add PyTorch (*.pth) model files to the models directory.</TextBlock>
                                  </StackPanel>

                                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Model Tile Size</TextBlock>
                                    <ui:FAComboBox IsEnabled="True" IsEditable="True" Width="160"  MaxDropDownHeight="600" Text="{Binding ModelTileSize, Mode=TwoWay}"
                                                   VerticalAlignment="Center"
                                                   ItemsSource="{Binding TileSizes}" />
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
                                    <TextBlock Width="700" TextWrapping="WrapWithOverflow" Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Tile size to use when upscaling images with the selected model. The image is cut into tiles in order to upscale without running into the VRAM limits of your GPU. Larger is better when the GPU has enough VRAM to support it. The auto setting estimates the largest tile size which can be used based on available VRAM and is recommended for most users.</TextBlock>
                                  </StackPanel>

                                </StackPanel>

                              </Border>
                              
                            </StackPanel>
                              <Button Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top"
        IsVisible="{Binding !$parent[ItemsControl].((vm:MainWindowViewModel)DataContext).CurrentWorkflow.IsDefaultWorkflow}"
        Command="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).DeleteChain}"
        CommandParameter="{Binding}">
                                <StackPanel Orientation="Horizontal">
                                  <materialIcons:MaterialIcon Kind="MinusCircle" />
                                  <TextBlock Margin="5,0,0,0" Text="{Binding ChainNumber, StringFormat=Remove Chain {0}}" />
                                </StackPanel>
                              </Button>
                            </Grid>
                          </Border>

                        </StackPanel>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                  <StackPanel Orientation="Horizontal" IsVisible="{Binding !CurrentWorkflow.IsDefaultWorkflow}">
                    <Button Margin="10,20,0,20" Command="{Binding AddChain}">
                      <StackPanel Orientation="Horizontal">
                        <materialIcons:MaterialIcon Kind="PlusCircle" />
                        <TextBlock Margin="5,0,0,0">Add Chain</TextBlock>
                      </StackPanel>
                    </Button>
                    <TextBlock Foreground="Gray" Width="700" TextWrapping="WrapWithOverflow" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                      A chain is a a set of upscale settings which can be activated based on conditions such as the image resolution and whether the image is color or grayscale. 
                      This allows you to specify different upscale models for different types of images. 
                    </TextBlock>
                  </StackPanel>
                </StackPanel>
              </Border>
            </StackPanel>


          </StackPanel>
        </ScrollViewer>

      </DockPanel>

      
        <!-- Settings Overlay -->
        <StackPanel IsVisible="{Binding ShowAppSettings}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,30" Grid.Column="1">
          <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="20">
            <DockPanel>
              <TextBlock DockPanel.Dock="Left" FontWeight="Bold" Text="App Settings"></TextBlock>
            </DockPanel>

            <!-- App Settings -->
            <Border Classes="border">
              <StackPanel>
                <StackPanel IsVisible="{Binding IsInstalled}">
                  <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                      <CheckBox IsChecked="{Binding AutoUpdateEnabled}">Auto Update</CheckBox>
                      <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                        Whether to automatically check for and install app updates.
                      </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                      <TextBlock Text="Current Version" VerticalAlignment="Center"></TextBlock>
                      <TextBlock VerticalAlignment="Center" FontFamily="Consolas" Text="{Binding AppVersion}" Margin="20,0,0,0"></TextBlock>
                      <hypertext:Hyperlink VerticalAlignment="Center" Margin="20,0,0,0" Url="https://github.com/the-database/MangaJaNaiConverterGui/releases"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                      <TextBlock VerticalAlignment="Center" Text="{Binding UpdateStatusText}" Margin="0,0,0,0"></TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,10,0,10" IsVisible="{Binding ShowCheckUpdateButton}">
                      <Button Command="{Binding CheckForUpdates}">Check for Updates Now</Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,10,0,10" IsVisible="{Binding ShowDownloadButton}">
                      <Button Command="{Binding DownloadUpdate}">Download Update</Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10,10,0,10" IsVisible="{Binding ShowApplyButton}">
                      <Button Command="{Binding ApplyUpdate}">Restart to Update MangaJaNaiConverterGui</Button>
                    </StackPanel>
                  </StackPanel>
                </StackPanel>
                <StackPanel IsVisible="{Binding !IsInstalled}">
                  <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                    <TextBlock>App is not installed; auto update settings unavailable.</TextBlock>
                  </StackPanel>
                </StackPanel>
              </StackPanel>
            </Border>

            <!-- Upscale Settings -->
            <DockPanel Margin="0,10,0,0">
              <TextBlock DockPanel.Dock="Left" FontWeight="Bold" Text="Upscale Settings"></TextBlock>
            </DockPanel>
            <Border Classes="border">
              <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                  <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">GPU</TextBlock>
                  <ComboBox ItemsSource="{Binding DeviceList}" SelectedIndex="{Binding SelectedDeviceIndex, Mode=TwoWay}"  />
                  <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                    Which GPU to use for upscaling with PyTorch.
                  </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                  <CheckBox IsChecked="{Binding UseCpu}">CPU Mode</CheckBox>
                  <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                    Use CPU for upscaling with PyTorch instead of GPU.
                  </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                  <CheckBox IsChecked="{Binding UseFp16}">FP16 Mode</CheckBox>
                  <TextBlock Foreground="Gray" FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                    Runs PyTorch upscaling in FP16 mode for less VRAM usage and speedup on RTX GPUs.
                  </TextBlock>
                </StackPanel>
              </StackPanel>
            </Border>

            <!-- Python Environment -->
            <DockPanel Margin="0,10,0,0">
              <TextBlock DockPanel.Dock="Left" FontWeight="Bold" Text="Python Environment"></TextBlock>
            </DockPanel>
            <Border Classes="border">
              <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,10">
                  <SelectableTextBlock FontFamily="Consolas" Margin="0,0,5,0" VerticalAlignment="Center" Text="{Binding PythonPath}" />
                </StackPanel>
              </StackPanel>
            </Border>

            <Border Classes="border">
              <ToggleButton DockPanel.Dock="Right" Margin="10,10,0,10" IsChecked="{Binding !RequestShowAppSettings}">
                <StackPanel Orientation="Horizontal">
                  <materialIcons:MaterialIcon Kind="ArrowBackCircle" />
                  <TextBlock Margin="5,0,0,0">Return</TextBlock>
                </StackPanel>
              </ToggleButton>
            </Border>
          </StackPanel>
        </StackPanel>

    </Grid>

    <Grid IsVisible="{Binding IsExtractingBackend}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <StackPanel>
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding BackendSetupMainStatus}" />
        <ScrollViewer Margin="0,10,0,0" Background="#111111" Height="450" Width="1200" HorizontalScrollBarVisibility="Auto" Foreground="Gray"  PropertyChanged="ConsoleScrollViewer_PropertyChanged">
          <SelectableTextBlock Margin="20" Text="{Binding BackendSetupSubStatusText}" FontFamily="Consolas" PropertyChanged="ConsoleTextBlock_PropertyChanged" />
        </ScrollViewer>
      </StackPanel>
    </Grid>
  </Grid>

</Window>
